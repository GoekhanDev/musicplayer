using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RecodedMusicPlayer.JsonModels
{
    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using QuickType;
    //
    //    var soundCloudSearchModel = SoundCloudSearchModel.FromJson(jsonString);

    //Generated with Quicktype

    namespace QuickType
    {
        using System;
        using System.Collections.Generic;

        using System.Globalization;
        using Newtonsoft.Json;
        using Newtonsoft.Json.Converters;

        public partial class SoundCloudSearchModel
        {
            [JsonProperty("collection")]
            public Collection[] Collection { get; set; }

            [JsonProperty("total_results")]
            public long TotalResults { get; set; }

            [JsonProperty("facets")]
            public SoundCloudSearchModelFacet[] Facets { get; set; }

            [JsonProperty("next_href")]
            public Uri NextHref { get; set; }

            [JsonProperty("query_urn")]
            public string QueryUrn { get; set; }
        }

        public partial class Collection
        {
            [JsonProperty("avatar_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri AvatarUrl { get; set; }

            [JsonProperty("city")]
            public string City { get; set; }

            [JsonProperty("comments_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? CommentsCount { get; set; }

            [JsonProperty("country_code")]
            public string CountryCode { get; set; }

            [JsonProperty("created_at")]
            public DateTimeOffset CreatedAt { get; set; }

            [JsonProperty("creator_subscriptions", NullValueHandling = NullValueHandling.Ignore)]
            public CreatorSubscription[] CreatorSubscriptions { get; set; }

            [JsonProperty("creator_subscription", NullValueHandling = NullValueHandling.Ignore)]
            public CreatorSubscription CreatorSubscription { get; set; }

            [JsonProperty("description")]
            public string Description { get; set; }

            [JsonProperty("followers_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? FollowersCount { get; set; }

            [JsonProperty("followings_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? FollowingsCount { get; set; }

            [JsonProperty("first_name", NullValueHandling = NullValueHandling.Ignore)]
            public string FirstName { get; set; }

            [JsonProperty("full_name", NullValueHandling = NullValueHandling.Ignore)]
            public string FullName { get; set; }

            [JsonProperty("groups_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? GroupsCount { get; set; }

            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonProperty("kind")]
            public string Kind { get; set; }

            [JsonProperty("last_modified")]
            public DateTimeOffset LastModified { get; set; }

            [JsonProperty("last_name", NullValueHandling = NullValueHandling.Ignore)]
            public string LastName { get; set; }

            [JsonProperty("likes_count")]
            public long LikesCount { get; set; }

            [JsonProperty("playlist_likes_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? PlaylistLikesCount { get; set; }

            [JsonProperty("permalink")]
            public string Permalink { get; set; }

            [JsonProperty("permalink_url")]
            public Uri PermalinkUrl { get; set; }

            [JsonProperty("playlist_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? PlaylistCount { get; set; }

            [JsonProperty("reposts_count")]
            public long? RepostsCount { get; set; }

            [JsonProperty("track_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? TrackCount { get; set; }

            [JsonProperty("uri")]
            public Uri Uri { get; set; }

            [JsonProperty("urn", NullValueHandling = NullValueHandling.Ignore)]
            public string Urn { get; set; }

            [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
            public string Username { get; set; }

            [JsonProperty("verified", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Verified { get; set; }

            [JsonProperty("visuals")]
            public Visuals Visuals { get; set; }

            [JsonProperty("badges", NullValueHandling = NullValueHandling.Ignore)]
            public Badges Badges { get; set; }

            [JsonProperty("station_urn", NullValueHandling = NullValueHandling.Ignore)]
            public string StationUrn { get; set; }

            [JsonProperty("station_permalink", NullValueHandling = NullValueHandling.Ignore)]
            public string StationPermalink { get; set; }

            [JsonProperty("artwork_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri ArtworkUrl { get; set; }

            [JsonProperty("caption")]
            public object Caption { get; set; }

            [JsonProperty("commentable", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Commentable { get; set; }

            [JsonProperty("comment_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? CommentCount { get; set; }

            [JsonProperty("downloadable", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Downloadable { get; set; }

            [JsonProperty("download_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? DownloadCount { get; set; }

            [JsonProperty("duration", NullValueHandling = NullValueHandling.Ignore)]
            public long? Duration { get; set; }

            [JsonProperty("full_duration", NullValueHandling = NullValueHandling.Ignore)]
            public long? FullDuration { get; set; }

            [JsonProperty("embeddable_by", NullValueHandling = NullValueHandling.Ignore)]
            public string EmbeddableBy { get; set; }

            [JsonProperty("genre", NullValueHandling = NullValueHandling.Ignore)]
            public string Genre { get; set; }

            [JsonProperty("has_downloads_left", NullValueHandling = NullValueHandling.Ignore)]
            public bool? HasDownloadsLeft { get; set; }

            [JsonProperty("label_name")]
            public string LabelName { get; set; }

            [JsonProperty("license", NullValueHandling = NullValueHandling.Ignore)]
            public string License { get; set; }

            [JsonProperty("playback_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? PlaybackCount { get; set; }

            [JsonProperty("public", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Public { get; set; }

            [JsonProperty("publisher_metadata")]
            public PublisherMetadata PublisherMetadata { get; set; }

            [JsonProperty("purchase_title")]
            public object PurchaseTitle { get; set; }

            [JsonProperty("purchase_url")]
            public Uri PurchaseUrl { get; set; }

            [JsonProperty("release_date")]
            public DateTimeOffset? ReleaseDate { get; set; }

            [JsonProperty("secret_token")]
            public object SecretToken { get; set; }

            [JsonProperty("sharing", NullValueHandling = NullValueHandling.Ignore)]
            public string Sharing { get; set; }

            [JsonProperty("state", NullValueHandling = NullValueHandling.Ignore)]
            public string State { get; set; }

            [JsonProperty("streamable", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Streamable { get; set; }

            [JsonProperty("tag_list", NullValueHandling = NullValueHandling.Ignore)]
            public string TagList { get; set; }

            [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
            public string Title { get; set; }

            [JsonProperty("track_format", NullValueHandling = NullValueHandling.Ignore)]
            public string TrackFormat { get; set; }

            [JsonProperty("user_id", NullValueHandling = NullValueHandling.Ignore)]
            public long? UserId { get; set; }

            [JsonProperty("waveform_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri WaveformUrl { get; set; }

            [JsonProperty("display_date", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? DisplayDate { get; set; }

            [JsonProperty("media", NullValueHandling = NullValueHandling.Ignore)]
            public Media Media { get; set; }

            [JsonProperty("track_authorization", NullValueHandling = NullValueHandling.Ignore)]
            public string TrackAuthorization { get; set; }

            [JsonProperty("monetization_model", NullValueHandling = NullValueHandling.Ignore)]
            public string MonetizationModel { get; set; }

            [JsonProperty("policy", NullValueHandling = NullValueHandling.Ignore)]
            public string Policy { get; set; }

            [JsonProperty("user", NullValueHandling = NullValueHandling.Ignore)]
            public CollectionUser User { get; set; }

            [JsonProperty("managed_by_feeds", NullValueHandling = NullValueHandling.Ignore)]
            public bool? ManagedByFeeds { get; set; }

            [JsonProperty("set_type", NullValueHandling = NullValueHandling.Ignore)]
            public string SetType { get; set; }

            [JsonProperty("is_album", NullValueHandling = NullValueHandling.Ignore)]
            public bool? IsAlbum { get; set; }

            [JsonProperty("published_at", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? PublishedAt { get; set; }

            [JsonProperty("tracks", NullValueHandling = NullValueHandling.Ignore)]
            public Track[] Tracks { get; set; }
        }

        public partial class Badges
        {
            [JsonProperty("pro")]
            public bool Pro { get; set; }

            [JsonProperty("pro_unlimited")]
            public bool ProUnlimited { get; set; }

            [JsonProperty("verified")]
            public bool Verified { get; set; }
        }

        public partial class CreatorSubscription
        {
            [JsonProperty("product")]
            public Product Product { get; set; }
        }

        public partial class Product
        {
            [JsonProperty("id")]
            public string Id { get; set; }
        }

        public partial class Media
        {
            [JsonProperty("transcodings")]
            public Transcoding[] Transcodings { get; set; }
        }

        public partial class Transcoding
        {
            [JsonProperty("url")]
            public Uri Url { get; set; }

            [JsonProperty("preset")]
            public string Preset { get; set; }

            [JsonProperty("duration")]
            public long Duration { get; set; }

            [JsonProperty("snipped")]
            public bool Snipped { get; set; }

            [JsonProperty("format")]
            public Format Format { get; set; }

            [JsonProperty("quality")]
            public string Quality { get; set; }
        }

        public partial class Format
        {
            [JsonProperty("protocol")]
            public string Protocol { get; set; }

            [JsonProperty("mime_type")]
            public string MimeType { get; set; }
        }

        public partial class PublisherMetadata
        {
            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonProperty("urn")]
            public string Urn { get; set; }

            [JsonProperty("contains_music")]
            public bool ContainsMusic { get; set; }
        }

        public partial class Track
        {
            [JsonProperty("artwork_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri ArtworkUrl { get; set; }

            [JsonProperty("caption")]
            public object Caption { get; set; }

            [JsonProperty("commentable", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Commentable { get; set; }

            [JsonProperty("comment_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? CommentCount { get; set; }

            [JsonProperty("created_at", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? CreatedAt { get; set; }

            [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
            public string Description { get; set; }

            [JsonProperty("downloadable", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Downloadable { get; set; }

            [JsonProperty("download_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? DownloadCount { get; set; }

            [JsonProperty("duration", NullValueHandling = NullValueHandling.Ignore)]
            public long? Duration { get; set; }

            [JsonProperty("full_duration", NullValueHandling = NullValueHandling.Ignore)]
            public long? FullDuration { get; set; }

            [JsonProperty("embeddable_by", NullValueHandling = NullValueHandling.Ignore)]
            public string EmbeddableBy { get; set; }

            [JsonProperty("genre", NullValueHandling = NullValueHandling.Ignore)]
            public string Genre { get; set; }

            [JsonProperty("has_downloads_left", NullValueHandling = NullValueHandling.Ignore)]
            public bool? HasDownloadsLeft { get; set; }

            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonProperty("kind")]
            public string Kind { get; set; }

            [JsonProperty("label_name", NullValueHandling = NullValueHandling.Ignore)]
            public string LabelName { get; set; }

            [JsonProperty("last_modified", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? LastModified { get; set; }

            [JsonProperty("license", NullValueHandling = NullValueHandling.Ignore)]
            public string License { get; set; }

            [JsonProperty("likes_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? LikesCount { get; set; }

            [JsonProperty("permalink", NullValueHandling = NullValueHandling.Ignore)]
            public string Permalink { get; set; }

            [JsonProperty("permalink_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri PermalinkUrl { get; set; }

            [JsonProperty("playback_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? PlaybackCount { get; set; }

            [JsonProperty("public", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Public { get; set; }

            [JsonProperty("publisher_metadata", NullValueHandling = NullValueHandling.Ignore)]
            public PublisherMetadata PublisherMetadata { get; set; }

            [JsonProperty("purchase_title")]
            public object PurchaseTitle { get; set; }

            [JsonProperty("purchase_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri PurchaseUrl { get; set; }

            [JsonProperty("release_date", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? ReleaseDate { get; set; }

            [JsonProperty("reposts_count", NullValueHandling = NullValueHandling.Ignore)]
            public long? RepostsCount { get; set; }

            [JsonProperty("secret_token")]
            public object SecretToken { get; set; }

            [JsonProperty("sharing", NullValueHandling = NullValueHandling.Ignore)]
            public string Sharing { get; set; }

            [JsonProperty("state", NullValueHandling = NullValueHandling.Ignore)]
            public string State { get; set; }

            [JsonProperty("streamable", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Streamable { get; set; }

            [JsonProperty("tag_list", NullValueHandling = NullValueHandling.Ignore)]
            public string TagList { get; set; }

            [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
            public string Title { get; set; }

            [JsonProperty("track_format", NullValueHandling = NullValueHandling.Ignore)]
            public string TrackFormat { get; set; }

            [JsonProperty("uri", NullValueHandling = NullValueHandling.Ignore)]
            public Uri Uri { get; set; }

            [JsonProperty("urn", NullValueHandling = NullValueHandling.Ignore)]
            public string Urn { get; set; }

            [JsonProperty("user_id", NullValueHandling = NullValueHandling.Ignore)]
            public long? UserId { get; set; }

            [JsonProperty("visuals")]
            public object Visuals { get; set; }

            [JsonProperty("waveform_url", NullValueHandling = NullValueHandling.Ignore)]
            public Uri WaveformUrl { get; set; }

            [JsonProperty("display_date", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? DisplayDate { get; set; }

            [JsonProperty("media", NullValueHandling = NullValueHandling.Ignore)]
            public Media Media { get; set; }

            [JsonProperty("station_urn", NullValueHandling = NullValueHandling.Ignore)]
            public string StationUrn { get; set; }

            [JsonProperty("station_permalink", NullValueHandling = NullValueHandling.Ignore)]
            public string StationPermalink { get; set; }

            [JsonProperty("track_authorization", NullValueHandling = NullValueHandling.Ignore)]
            public string TrackAuthorization { get; set; }

            [JsonProperty("monetization_model")]
            public string MonetizationModel { get; set; }

            [JsonProperty("policy")]
            public string Policy { get; set; }

            [JsonProperty("user", NullValueHandling = NullValueHandling.Ignore)]
            public TrackUser User { get; set; }
        }

        public partial class TrackUser
        {
            [JsonProperty("avatar_url")]
            public Uri AvatarUrl { get; set; }

            [JsonProperty("first_name")]
            public string FirstName { get; set; }

            [JsonProperty("followers_count")]
            public long FollowersCount { get; set; }

            [JsonProperty("full_name")]
            public string FullName { get; set; }

            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonProperty("kind")]
            public string Kind { get; set; }

            [JsonProperty("last_modified")]
            public DateTimeOffset LastModified { get; set; }

            [JsonProperty("last_name")]
            public string LastName { get; set; }

            [JsonProperty("permalink")]
            public string Permalink { get; set; }

            [JsonProperty("permalink_url")]
            public Uri PermalinkUrl { get; set; }

            [JsonProperty("uri")]
            public Uri Uri { get; set; }

            [JsonProperty("urn")]
            public string Urn { get; set; }

            [JsonProperty("username")]
            public string Username { get; set; }

            [JsonProperty("verified")]
            public bool Verified { get; set; }

            [JsonProperty("city")]
            public string City { get; set; }

            [JsonProperty("country_code")]
            public string CountryCode { get; set; }

            [JsonProperty("badges")]
            public Badges Badges { get; set; }

            [JsonProperty("station_urn")]
            public string StationUrn { get; set; }

            [JsonProperty("station_permalink")]
            public string StationPermalink { get; set; }
        }

        public partial class CollectionUser
        {
            [JsonProperty("avatar_url")]
            public Uri AvatarUrl { get; set; }

            [JsonProperty("city")]
            public string City { get; set; }

            [JsonProperty("comments_count")]
            public long CommentsCount { get; set; }

            [JsonProperty("country_code")]
            public string CountryCode { get; set; }

            [JsonProperty("created_at")]
            public DateTimeOffset CreatedAt { get; set; }

            [JsonProperty("creator_subscriptions")]
            public CreatorSubscription[] CreatorSubscriptions { get; set; }

            [JsonProperty("creator_subscription")]
            public CreatorSubscription CreatorSubscription { get; set; }

            [JsonProperty("description")]
            public string Description { get; set; }

            [JsonProperty("followers_count")]
            public long FollowersCount { get; set; }

            [JsonProperty("followings_count")]
            public long FollowingsCount { get; set; }

            [JsonProperty("first_name")]
            public string FirstName { get; set; }

            [JsonProperty("full_name")]
            public string FullName { get; set; }

            [JsonProperty("groups_count")]
            public long GroupsCount { get; set; }

            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonProperty("kind")]
            public string Kind { get; set; }

            [JsonProperty("last_modified")]
            public DateTimeOffset LastModified { get; set; }

            [JsonProperty("last_name")]
            public string LastName { get; set; }

            [JsonProperty("likes_count")]
            public long LikesCount { get; set; }

            [JsonProperty("playlist_likes_count")]
            public long PlaylistLikesCount { get; set; }

            [JsonProperty("permalink")]
            public string Permalink { get; set; }

            [JsonProperty("permalink_url")]
            public Uri PermalinkUrl { get; set; }

            [JsonProperty("playlist_count")]
            public long PlaylistCount { get; set; }

            [JsonProperty("reposts_count")]
            public object RepostsCount { get; set; }

            [JsonProperty("track_count")]
            public long TrackCount { get; set; }

            [JsonProperty("uri")]
            public Uri Uri { get; set; }

            [JsonProperty("urn")]
            public string Urn { get; set; }

            [JsonProperty("username")]
            public string Username { get; set; }

            [JsonProperty("verified")]
            public bool Verified { get; set; }

            [JsonProperty("visuals")]
            public Visuals Visuals { get; set; }

            [JsonProperty("badges")]
            public Badges Badges { get; set; }

            [JsonProperty("station_urn")]
            public string StationUrn { get; set; }

            [JsonProperty("station_permalink")]
            public string StationPermalink { get; set; }
        }

        public partial class Visuals
        {
            [JsonProperty("urn")]
            public string Urn { get; set; }

            [JsonProperty("enabled")]
            public bool Enabled { get; set; }

            [JsonProperty("visuals")]
            public Visual[] VisualsVisuals { get; set; }

            [JsonProperty("tracking")]
            public object Tracking { get; set; }
        }

        public partial class Visual
        {
            [JsonProperty("urn")]
            public string Urn { get; set; }

            [JsonProperty("entry_time")]
            public long EntryTime { get; set; }

            [JsonProperty("visual_url")]
            public Uri VisualUrl { get; set; }
        }

        public partial class SoundCloudSearchModelFacet
        {
            [JsonProperty("name")]
            public string Name { get; set; }

            [JsonProperty("facets")]
            public FacetFacet[] Facets { get; set; }
        }

        public partial class FacetFacet
        {
            [JsonProperty("value")]
            public string Value { get; set; }

            [JsonProperty("count")]
            public long Count { get; set; }

            [JsonProperty("filter")]
            public string Filter { get; set; }
        }

        public partial class SoundCloudSearchModel
        {
            public static SoundCloudSearchModel FromJson(string json) => JsonConvert.DeserializeObject<SoundCloudSearchModel>(json, QuickType.Converter.Settings);
        }

        public static class Serialize
        {
            public static string ToJson(this SoundCloudSearchModel self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
        }

        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
            };
        }
    }

}
